# 重启 nginx
# nginx -s reload
worker_processes auto;
# error_log /var/log/nginx/error.log;
error_log /var/log/nginx/error.log debug;
pid /run/nginx.pid;
load_module /usr/lib/nginx/modules/ngx_http_brotli_filter_module.so;
load_module /usr/lib/nginx/modules/ngx_http_brotli_static_module.so;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    autoindex off; # 禁止目录访问

    server {
        # 如果找不到对应的文件或目录，就会尝试使用index.html作为默认的文件名
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  _;
        root         /usr/share/nginx/html;

        # 加载默认服务器块的配置文件
        include /etc/nginx/default.d/*.conf;

        # 重定向配置
        server_name_in_redirect off;

        location / {
            try_files $uri $uri/ =404;
        }

        # 添加目录索引: /docs 和 /blog
        location /docs {
            index index.html;
        }
        location /blog {
            index index.html;
        }
    }

    # Gzip 配置
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml+rss;

    # Brotli
    brotli on;
    brotli_comp_level 6;
    brotli_buffers 16 8k;
    brotli_min_length 20;
    brotli_types
      application/atom+xml
      application/geo+json
      application/javascript
      application/x-javascript
      application/json
      application/ld+json
      application/manifest+json
      application/rdf+xml
      application/rss+xml
      application/vnd.ms-fontobject
      application/wasm
      application/x-web-app-manifest+json
      application/xhtml+xml
      application/xml
      font/eot
      font/otf
      font/ttf
      image/bmp
      image/svg+xml
      text/cache-manifest
      text/calendar
      text/css
      text/javascript
      text/markdown
      text/plain
      text/xml
      text/vcard
      # text/vnd.rim.location.xloc
      text/vtt
      text/x-component
      text/x-cross-domain-policy;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;

    keepalive_timeout 65;

    include /etc/nginx/conf.d/*.conf;
}
